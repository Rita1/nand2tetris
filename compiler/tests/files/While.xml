<class><keyword>class</keyword><identifier>Main</identifier><symbol>{</symbol><subroutineDec><keyword>function</keyword><keyword>void</keyword><identifier>run</identifier><symbol>(</symbol><parameterList></parameterList><symbol>)</symbol><subroutineBody><symbol>{</symbol><varDec><keyword>var</keyword><keyword>char</keyword><identifier>key</identifier><symbol>;</symbol></varDec><statements><whileStatement><keyword>while</keyword><symbol>(</symbol><expression><term><identifier>exit</identifier></term></expression><symbol>)</symbol><symbol>{</symbol><statements><whileStatement><keyword>while</keyword><symbol>(</symbol><expression><term><identifier>key</identifier></term></expression><symbol>)</symbol><symbol>{</symbol><statements><letStatement><keyword>let</keyword><identifier>key</identifier><symbol>=</symbol><expression><term><identifier>key</identifier></term></expression><symbol>;</symbol></letStatement><doStatement><keyword>do</keyword><identifier>moveSquare</identifier><symbol>(</symbol><expressionList></expressionList><symbol>)</symbol><symbol>;</symbol></doStatement></statements><symbol>}</symbol></whileStatement><whileStatement><keyword>while</keyword><symbol>(</symbol><expression><term><identifier>key</identifier></term></expression><symbol>)</symbol><symbol>{</symbol><statements><letStatement><keyword>let</keyword><identifier>key</identifier><symbol>=</symbol><expression><term><identifier>key</identifier></term></expression><symbol>;</symbol></letStatement><doStatement><keyword>do</keyword><identifier>moveSquare</identifier><symbol>(</symbol><expressionList></expressionList><symbol>)</symbol><symbol>;</symbol></doStatement></statements><symbol>}</symbol></whileStatement></statements><symbol>}</symbol></whileStatement><returnStatement><keyword>return</keyword><symbol>;</symbol></returnStatement></statements><symbol>}</symbol></subroutineBody></subroutineDec><symbol>}</symbol></class>